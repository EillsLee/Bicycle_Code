C251 COMPILER V5.60.0,  SEEKFREE_ICM20602                                                  29/04/21  07:07:02  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE SEEKFREE_ICM20602
OBJECT MODULE PLACED IN .\Out_File\SEEKFREE_ICM20602.obj
COMPILER INVOKED BY: E:\Keil_v5\C251\BIN\C251.EXE ..\..\Libraries\seekfree_peripheral\SEEKFREE_ICM20602.c XSMALL INTR2 W
                    -ARNINGLEVEL(3) BROWSE INCDIR(..\..\Libraries\libraries;..\..\Libraries\seekfree_libraries;..\..\Libraries\seekfree_perip
                    -heral;..\USER\inc;..\USER\src;..\USER\src\MPU6050_FILE) DEBUG PRINT(.\Out_File\SEEKFREE_ICM20602.lst) TABS(2) OBJECT(.\O
                    -ut_File\SEEKFREE_ICM20602.obj) 

stmt  level    source

    1          /********************************************************************************************************
             -*************
    2           * COPYRIGHT NOTICE
    3           * Copyright (c) 2018,逐飞科技
    4           * All rights reserved.
    5           * 技术讨论QQ群：一群：179029047(已满)  二群：244861897
    6           *
    7           * 以下所有内容版权均属逐飞科技所有，未经允许不得用于商业用途，
    8           * 欢迎各位使用并传播本程序，修改内容时必须保留逐飞科技的版权声明。
    9           *
   10           * @file          ICM20602
   11           * @company       成都逐飞科技有限公司
   12           * @author        逐飞科技(QQ3184284598)
   13           * @version       查看doc内version文件 版本说明
   14           * @Software    MDK FOR C251 V5.60
   15           * @Taobao      https://seekfree.taobao.com/
   16           * @date          2019-04-30
   17           * @note    
   18                    接线定义：
   19                    ------------------------------------ 
   20          
   21                    ------------------------------------ 
   22           ********************************************************************************************************
             -************/
   23          
   24          
   25          #include "SEEKFREE_ICM20602.h"
   26          #include "SEEKFREE_IIC.h"
   27          #include "zf_delay.h"
   28          #include "zf_spi.h"
   29          
   30          int16 icm_gyro_x,icm_gyro_y,icm_gyro_z;
   31          int16 icm_acc_x,icm_acc_y,icm_acc_z;
   32          
   33          
   34          
   35          //-------------------------------------------------------------------------------------------------------
             -------------
   36          //  以下函数是使用软件IIC通信，相比较硬件IIC，软件IIC引脚更加灵活，可以使用任意普通IO
   37          //-------------------------------------------------------------------------------------------------------
             -------------
   38          //-------------------------------------------------------------------------------------------------------
             -------------
   39          //  @brief      ICM20602自检函数
   40          //  @param      NULL
   41          //  @return     void
   42          //  @since      v1.0
   43          //  Sample usage:       调用该函数前，请先调用模拟IIC的初始化
   44          //-------------------------------------------------------------------------------------------------------
             -------------
   45          void icm20602_self1_check(void)
   46          {
   47   1          uint8 dat;
   48   1        dat = simiic_read_reg(ICM20602_DEV_ADDR,ICM20602_WHO_AM_I,SIMIIC);
   49   1          while(0x12 != dat)   //读取ICM20602 ID
   50   1          {
C251 COMPILER V5.60.0,  SEEKFREE_ICM20602                                                  29/04/21  07:07:02  PAGE 2   

   51   2              dat = simiic_read_reg(ICM20602_DEV_ADDR,ICM20602_WHO_AM_I,SIMIIC);
   52   2              delay_ms(10);
   53   2              //卡在这里原因有以下几点
   54   2              //1 ICM20602坏了，如果是新的这样的概率极低
   55   2              //2 接线错误或者没有接好
   56   2              //3 可能你需要外接上拉电阻，上拉到3.3V
   57   2          }
   58   1      }
   59          
   60          
   61          
   62          //-------------------------------------------------------------------------------------------------------
             -------------
   63          //  @brief      软件IIC，初始化ICM20602
   64          //  @param      NULL
   65          //  @return     void
   66          //  @since      v1.0
   67          //  Sample usage:       调用该函数前，请先调用模拟IIC的初始化
   68          //-------------------------------------------------------------------------------------------------------
             -------------
   69          void icm20602_init_simiic(void)
   70          {
   71   1          delay_ms(10);  //上电延时
   72   1      
   73   1          //检测
   74   1          icm20602_self1_check();
   75   1      
   76   1          //复位
   77   1          simiic_write_reg(ICM20602_DEV_ADDR,ICM20602_PWR_MGMT_1,0x80);               //复位设备
   78   1          delay_ms(2);                                                        //延时
   79   1          while(0x80 & simiic_read_reg(ICM20602_DEV_ADDR,ICM20602_PWR_MGMT_1,SIMIIC));//等待复位完成
   80   1      
   81   1          //配置参数
   82   1          simiic_write_reg(ICM20602_DEV_ADDR,ICM20602_PWR_MGMT_1,0x01);               //时钟设置
   83   1          simiic_write_reg(ICM20602_DEV_ADDR,ICM20602_PWR_MGMT_2,0x00);               //开启陀螺仪和加速度计
   84   1          simiic_write_reg(ICM20602_DEV_ADDR,ICM20602_CONFIG,0x01);                   //176HZ 1KHZ
   85   1          simiic_write_reg(ICM20602_DEV_ADDR,ICM20602_SMPLRT_DIV,0x07);               //采样速率 SAMPLE_RATE = 
             -INTERNAL_SAMPLE_RATE / (1 + SMPLRT_DIV)
   86   1          simiic_write_reg(ICM20602_DEV_ADDR,ICM20602_GYRO_CONFIG,0x18);              //±2000 dps
   87   1          simiic_write_reg(ICM20602_DEV_ADDR,ICM20602_ACCEL_CONFIG,0x10);             //±8g
   88   1          simiic_write_reg(ICM20602_DEV_ADDR,ICM20602_ACCEL_CONFIG_2,0x03);           //Average 4 samples   44.
             -8HZ   //0x23 Average 16 samples
   89   1      }
   90          
   91          
   92          //-------------------------------------------------------------------------------------------------------
             -------------
   93          //  @brief      获取ICM20602加速度计数据
   94          //  @param      NULL
   95          //  @return     void
   96          //  @since      v1.0
   97          //  Sample usage:       执行该函数后，直接查看对应的变量即可
   98          //-------------------------------------------------------------------------------------------------------
             -------------
   99          void get_icm20602_accdata_simiic(void)
  100          {
  101   1          uint8 dat[6];
  102   1      
  103   1          simiic_read_regs(ICM20602_DEV_ADDR, ICM20602_ACCEL_XOUT_H, dat, 6, SIMIIC);
  104   1          icm_acc_x = (int16)(((uint16)dat[0]<<8 | dat[1]));
  105   1          icm_acc_y = (int16)(((uint16)dat[2]<<8 | dat[3]));
  106   1          icm_acc_z = (int16)(((uint16)dat[4]<<8 | dat[5]));
  107   1      }
  108          
  109          //-------------------------------------------------------------------------------------------------------
             -------------
C251 COMPILER V5.60.0,  SEEKFREE_ICM20602                                                  29/04/21  07:07:02  PAGE 3   

  110          //  @brief      获取ICM20602陀螺仪数据
  111          //  @param      NULL
  112          //  @return     void
  113          //  @since      v1.0
  114          //  Sample usage:       执行该函数后，直接查看对应的变量即可
  115          //-------------------------------------------------------------------------------------------------------
             -------------
  116          void get_icm20602_gyro_simiic(void)
  117          {
  118   1          uint8 dat[6];
  119   1      
  120   1          simiic_read_regs(ICM20602_DEV_ADDR, ICM20602_GYRO_XOUT_H, dat, 6, SIMIIC);
  121   1          icm_gyro_x = (int16)(((uint16)dat[0]<<8 | dat[1]));
  122   1          icm_gyro_y = (int16)(((uint16)dat[2]<<8 | dat[3]));
  123   1          icm_gyro_z = (int16)(((uint16)dat[4]<<8 | dat[5]));
  124   1      }
  125          
  126          
  127          
  128          
  129          //-------------------------------------------------------------------------------------------------------
             -------------
  130          //  以下函数是使用软件SPI通信，相比较硬件SPI，软件SPI引脚更加灵活，可以使用任意普通IO
  131          //-------------------------------------------------------------------------------------------------------
             -------------
  132          
  133          
  134          
  135          //-------------------------------------------------------------------------------------------------------
             -------------
  136          //  @brief      通过SPI写一个byte,同时读取一个byte
  137          //  @param      byte        发送的数据    
  138          //  @return     uint8       return 返回status状态
  139          //  @since      v1.0
  140          //  Sample usage:
  141          //-------------------------------------------------------------------------------------------------------
             -------------
  142          uint8 icm_simspi_wr_byte(uint8 byte)
  143          {
  144   1          uint8 i;
  145   1        
  146   1          for(i=0; i<8; i++)
  147   1          {
  148   2              ICM20602_MOSI(byte&0x80);
  149   2              byte <<= 1;
  150   2          ICM20602_SCK (0);
  151   2          
  152   2              ICM20602_SCK (1);
  153   2          byte |= ICM20602_MISO; 
  154   2          } 
  155   1          return(byte);                                         
  156   1      }
  157          
  158          //-------------------------------------------------------------------------------------------------------
             -------------
  159          //  @brief      将val写入cmd对应的寄存器地址,同时返回status字节
  160          //  @param      cmd         命令字
  161          //  @param      val         待写入寄存器的数值
  162          //  @since      v1.0
  163          //  Sample usage:
  164          //-------------------------------------------------------------------------------------------------------
             -------------
  165          void icm_simspi_w_reg_byte(uint8 cmd, uint8 val)
  166          {
  167   1          ICM20602_CSN (0);
  168   1          cmd |= ICM20602_SPI_W;
C251 COMPILER V5.60.0,  SEEKFREE_ICM20602                                                  29/04/21  07:07:02  PAGE 4   

  169   1          icm_simspi_wr_byte(cmd);                        
  170   1          icm_simspi_wr_byte(val);                                
  171   1          ICM20602_CSN (1);                                     
  172   1      }
  173          
  174          //-------------------------------------------------------------------------------------------------------
             -------------
  175          //  @brief      读取cmd所对应的寄存器地址
  176          //  @param      cmd         命令字
  177          //  @param      *val        存储读取的数据地址
  178          //  @since      v1.0
  179          //  Sample usage:
  180          //-------------------------------------------------------------------------------------------------------
             -------------
  181          void icm_simspi_r_reg_byte(uint8 cmd, uint8 *val)
  182          {
  183   1          ICM20602_CSN (0);
  184   1          cmd |= ICM20602_SPI_R;
  185   1          icm_simspi_wr_byte(cmd);                                
  186   1          *val = icm_simspi_wr_byte(0);                             
  187   1          ICM20602_CSN (1);                                     
  188   1      }
  189          
  190          //-------------------------------------------------------------------------------------------------------
             -------------
  191          //  @brief      读取cmd所对应的寄存器地址
  192          //  @param      cmd         命令字
  193          //  @param      *val        存储读取的数据地址
  194          //  @param      num         读取的数量
  195          //  @since      v1.0
  196          //  Sample usage:
  197          //-------------------------------------------------------------------------------------------------------
             -------------
  198          void icm_simspi_r_reg_bytes(uint8 cmd, uint8 *val, uint8 num)
  199          {
  200   1          uint16 i;
  201   1          ICM20602_CSN (0);
  202   1          cmd |= ICM20602_SPI_R;
  203   1          icm_simspi_wr_byte(cmd);
  204   1        
  205   1        for(i=0; i<num; i++)  
  206   1          val[i] = icm_simspi_wr_byte(0);    
  207   1      
  208   1        P52 = 0;  
  209   1        
  210   1          ICM20602_CSN (1);                                       
  211   1      }
  212          
  213          
  214          //-------------------------------------------------------------------------------------------------------
             -------------
  215          //  @brief      ICM20602自检函数
  216          //  @param      NULL
  217          //  @return     void          
  218          //  @since      v1.0
  219          //  Sample usage:       
  220          //-------------------------------------------------------------------------------------------------------
             -------------
  221          void icm20602_self4_check(void)
  222          {
  223   1          uint8 val;
  224   1          do
  225   1          {
  226   2              icm_simspi_r_reg_byte(ICM20602_WHO_AM_I,&val);
  227   2          
  228   2              //卡在这里原因有以下几点
C251 COMPILER V5.60.0,  SEEKFREE_ICM20602                                                  29/04/21  07:07:02  PAGE 5   

  229   2              //1 ICM20602坏了，如果是新的这样的概率极低
  230   2              //2 接线错误或者没有接好
  231   2              //3 可能你需要外接上拉电阻，上拉到3.3V
  232   2          }while(0x12 != val);
  233   1      }
  234          
  235          
  236          //-------------------------------------------------------------------------------------------------------
             -------------
  237          //  @brief      软件SPI，初始化ICM20602
  238          //  @param      NULL
  239          //  @return     void          
  240          //  @since      v1.0
  241          //  Sample usage:       
  242          //-------------------------------------------------------------------------------------------------------
             -------------
  243          void icm20602_init_simspi(void)
  244          {
  245   1          uint8 val;
  246   1      
  247   1          icm20602_self4_check();//检测
  248   1          
  249   1          icm_simspi_w_reg_byte(ICM20602_PWR_MGMT_1,0x80);//复位设备
  250   1          delay_ms(2);
  251   1          do
  252   1          {//等待复位成功
  253   2              icm_simspi_r_reg_byte(ICM20602_PWR_MGMT_1,&val);
  254   2          }while(0x41 != val);
  255   1          
  256   1          icm_simspi_w_reg_byte(ICM20602_PWR_MGMT_1,     0x01);            //时钟设置
  257   1          icm_simspi_w_reg_byte(ICM20602_PWR_MGMT_2,     0x00);            //开启陀螺仪和加速度计
  258   1          icm_simspi_w_reg_byte(ICM20602_CONFIG,         0x01);            //176HZ 1KHZ
  259   1          icm_simspi_w_reg_byte(ICM20602_SMPLRT_DIV,     0x07);            //采样速率 SAMPLE_RATE = INTERNAL_SA
             -MPLE_RATE / (1 + SMPLRT_DIV)
  260   1          icm_simspi_w_reg_byte(ICM20602_GYRO_CONFIG,    0x18);            //±2000 dps
  261   1          icm_simspi_w_reg_byte(ICM20602_ACCEL_CONFIG,   0x10);            //±8g
  262   1          icm_simspi_w_reg_byte(ICM20602_ACCEL_CONFIG_2, 0x03);            //Average 8 samples   44.8HZ
  263   1          
  264   1      }
  265          
  266          
  267          //-------------------------------------------------------------------------------------------------------
             -------------
  268          //  @brief      获取ICM20602加速度计数据
  269          //  @param      NULL
  270          //  @return     void
  271          //  @since      v1.0
  272          //  Sample usage:       执行该函数后，直接查看对应的变量即可
  273          //-------------------------------------------------------------------------------------------------------
             -------------
  274          void get_icm20602_accdata_simspi(void)
  275          {
  276   1          uint8 dat[6];
  277   1      
  278   1          
  279   1          icm_simspi_r_reg_bytes(ICM20602_ACCEL_XOUT_H, dat, 6);
  280   1          icm_acc_x = (int16)(((uint16)dat[0]<<8 | dat[1]));
  281   1          icm_acc_y = (int16)(((uint16)dat[2]<<8 | dat[3]));
  282   1          icm_acc_z = (int16)(((uint16)dat[4]<<8 | dat[5]));
  283   1      }
  284          
  285          //-------------------------------------------------------------------------------------------------------
             -------------
  286          //  @brief      获取ICM20602陀螺仪数据
  287          //  @param      NULL
  288          //  @return     void
C251 COMPILER V5.60.0,  SEEKFREE_ICM20602                                                  29/04/21  07:07:02  PAGE 6   

  289          //  @since      v1.0
  290          //  Sample usage:       执行该函数后，直接查看对应的变量即可
  291          //-------------------------------------------------------------------------------------------------------
             -------------
  292          void get_icm20602_gyro_simspi(void)
  293          {
  294   1          uint8 dat[6];
  295   1          
  296   1          icm_simspi_r_reg_bytes(ICM20602_GYRO_XOUT_H, dat, 6);
  297   1        P52 = 0;
  298   1        
  299   1          icm_gyro_x = (int16)(((uint16)dat[0]<<8 | dat[1]));
  300   1          icm_gyro_y = (int16)(((uint16)dat[2]<<8 | dat[3]));
  301   1          icm_gyro_z = (int16)(((uint16)dat[4]<<8 | dat[5]));
  302   1      }


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       670     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =        12         29
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =    ------     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
